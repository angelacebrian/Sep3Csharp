@page "/CreatePost"
@using HttpClients.ClientInterfaces
@using Domain.Models
@using Domain.DTOs
@using System.Drawing
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject IPostService PostService;
@inject IUserService userService

<h3 class="maintitle">Create a post</h3>

<style>
    .editor-menu {
        display: flex;
        gap: 10px;
    }
    
    .editor-button {
        display: flex;
        align-items: center;
        padding: 8px;
        border: none;
        background: none;
        cursor: pointer;
    }
    
    .editor-button:focus {
        outline: none;
    }
</style>

<div class="editor-menu">
    <button class="editor-button" onclick="toggleBold()">
        <i class="icon icon-bold"></i>
        <span>Bold</span>
    </button>
    <button class="editor-button" onclick="toggleItalic()">
        <i class="icon icon-italic"></i>
        <span>Italic</span>
    </button>
    <button class="editor-button" onclick="toggleSuperscript()">
        <i class="icon icon-superscript"></i>
        <span>Superscript</span>
    </button>
    <button class="editor-button" onclick="addImage()">
        <i class="icon icon-image"></i>
        <span>Add Image</span>
    </button>
</div>

<div contenteditable="true" id="editor"></div>



<div class="title">
            <label>Title:</label>
            <input type="text" @bind="postTitle" class="input-box" />
        </div>
        
        <div class="description">
            <label>Description:</label>
            <textarea @bind="postdescription" class="textarea-box"></textarea>
        </div>
        
<form name="form1" id="form1" action="/action_page.php">
    Category: <select name="subject" id="subject">
        <option value="" selected="selected">Homework</option>
        <option value="" selected="selected">Advice</option>
    </select>
    <br><br></form>

 <form name="form1" id="form1" action="/action_page.php">
            Choose campus: <select name="subject" id="subject">
                <option value="" selected="selected">Horsens</option>
                <option value="" selected="selected">Viborg</option>
                <option value="" selected="selected">Aarhus</option>
            </select>
            <br><br></form>
        
    

        <div class="button-row">
            @if (!string.IsNullOrEmpty(msg))
            {
                <label style="color : @color">@msg</label>
            }
            <button @onclick="Create1" class="acceptbtn">Post</button>
        </div>



@code {
    private Task<IEnumerable<User>> users;
    private int? selectedUserId;
    private string postTitle = "";
    private string postdescription = "";
    private string category = "";
    private string IsOption1Selected="";
    private string IsOption2Selected="";
    private string IsOption3Selected="";
    private string msg = "";
    private string color = "";
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private string? name;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;


    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;
        
        if (!isLoggedIn) return;
        
        userClaims = user.Claims;
        name = user.Identity!.Name!;
        users=userService.GetUsers(name);
    }

    private async Task Create1()
    {
        msg = "";
        if (string.IsNullOrEmpty(postTitle))
        {
            color = "red";
            msg = "Title cannot be empty!";
            return;
        }

        try
        {
            PostCreationDto dto = new(users.Id, postTitle, postdescription);
            await PostService.CreateAsync(dto);
            color = "green";
            msg = "Post created";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
    private void SelectCategory(string selectedCategory)
    {
        category = selectedCategory;
    }


}